What is synchronous code in javascript?
//The JavaScript engine executes our program sequentially, one line at a time from top to bottom in the exact order of the statements.
What is asychronous code in javascript?
//computer program to handle multiple tasks simultaneously rather than executing them one after the other.
//This approach can greatly improve the performance and responsiveness of a program.
//example: while a program retrieves data from a remote server, it can continue to execute other tasks such as responding to user inputs
1.setTimeout 
2.setInterval
3.callback with asychronous operation 
4.promise 
5.fetch 
6.async await 
=======================================================
setTimeout:
//It allows you to run a function after a certain amount of time has passed.
setInterval:
The setInterval() method calls a function at specified intervals (in milliseconds). The setInterval() method continues calling the function until clearInterval() is called.
=======================================================
callback:
//Afunction that's passed into another function, with the expectation that the callback will be called at the suitable time.
callback hell:
//when you chain multiple callbacks together, one after the other called callback hell.
============================================================
promise:
//A Promise is an object that will produce a single value some time in the future.
//If the promise is successful, it will produce a resolved value, but if something goes wrong then it will produce a reason why the promise failed.
//JavaScript promises can be in one of three possible states.
    1.pending: This is the default state of a defined promise
    2.fulfilled:  This is the state of a successful promise
    3.rejected: This is the state of a failed promise
Promise chain:
//To handle more than one asynchronous task, one after another
//You can chain multiple then() methods with the promise.
Promise All:
//Takes an array of promises(an iterable) as input. It returns a single Promise that resolves when all of the promises passed as an iterable.
========================================================================
Difference between callback and promise:
callback:
//The syntax is difficult to understand.
//Error handling may be hard to manage.
promise:
//The syntax is user-friendly and easy to read because of then and catch.
//Error handling is easier to manage using catch block.
=========================================================
Async/await 
//That allows you to write asynchronous code in a more synchronous, readable way.
//async is a keyword that is used to declare a function as asynchronous.
//await is a keyword that is used inside an async function to pause the execution of the function until a promise is resolved.
===========================================================